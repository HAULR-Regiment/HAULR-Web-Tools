{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UtilServiceService } from './util-service.service';\nimport recipes from 'src/assets/test_recipes.json';\nlet AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'logi.tools';\n    this.util = new UtilServiceService();\n    this.items = [];\n    this.quantities = [];\n    this.processings = [];\n    this.possibleProcesses = {};\n    this.resourcesPerItem = '';\n    this.outputPerItem = '';\n    this.selectedItems = [];\n  }\n  ngOnInit() {\n    recipes[\"items\"].forEach(item => {\n      this.items.push(this.util.capitalizeFirstLetter(item[\"name\"]));\n    });\n    this.items.sort();\n  }\n  onItemSelect() {\n    if (this.selectedItem) {\n      this.selectedProcess = '';\n      this.processings = [];\n      recipes[\"items\"].forEach(item => {\n        if (item['name'] === this.selectedItem.toLowerCase()) {\n          this.possibleProcesses = item['processes'];\n          item['processes'].forEach(e => {\n            this.processings.push(this.util.capitalizeFirstLetter(e['name'].toLowerCase()));\n          });\n        }\n      });\n      this.processings.sort();\n    } else {\n      this.selectedProcess = '';\n    }\n  }\n  onSubmit() {\n    this.possibleProcesses.forEach(element => {\n      if (this.selectedProcess.toLowerCase() === element['name']) {\n        this.timeToMake = element['time'];\n        console.log(element['input']);\n        for (let mat in element['input']) {\n          this.resourcesPerItem += this.util.capitalizeFirstLetter(mat) + ':\\t ' + element['input'][mat] + '\\t\\n';\n          // console.log(mat);\n          // console.log(element['input'][mat])\n        }\n\n        for (let mat in element['output']) {\n          this.outputPerItem += this.util.capitalizeFirstLetter(mat) + ':\\t ' + element['output'][mat] + '\\t\\n';\n        }\n        // element['input'].forEach((inputs: any) => {\n        //   console.log(inputs)\n        // });\n      }\n    });\n\n    const newItem = {\n      item: this.selectedItem,\n      processing: this.selectedProcess,\n      time: this.timeToMake,\n      resources: this.resourcesPerItem,\n      output: this.outputPerItem\n    };\n    this.selectedItems.push(newItem);\n    this.selectedItem = '';\n    this.selectedProcess = '';\n  }\n  calculateTotal() {\n    console.log();\n  }\n  removeItem(index) {\n    this.selectedItems.splice(index, 1);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","UtilServiceService","recipes","AppComponent","constructor","http","ngOnInit","forEach","item","items","push","util","capitalizeFirstLetter","sort","onItemSelect","selectedItem","selectedProcess","processings","toLowerCase","possibleProcesses","e","onSubmit","element","timeToMake","console","log","mat","resourcesPerItem","outputPerItem","newItem","processing","time","resources","output","selectedItems","calculateTotal","removeItem","index","splice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Josh\\Desktop\\logi-tools\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { UtilServiceService } from './util-service.service';\nimport recipes from 'src/assets/test_recipes.json';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private http: HttpClient) { }\n\n  title = 'logi.tools';\n\n  util = new UtilServiceService\n  data!: any[];\n  items: any[] = [];\n  quantities: any[] = [];\n  processings: any[] = [];\n  ngOnInit() {\n    recipes[\"items\"].forEach(item => {\n      this.items.push(this.util.capitalizeFirstLetter(item[\"name\"]))\n    });\n    this.items.sort();\n  }\n\n\n  selectedItem!: string;\n  selectedProcess!: string;\n  selectedQuantity!: string;\n  possibleProcesses: any = {};\n  timeToMake!: string;\n  resourcesPerItem: string = '';\n  outputPerItem: string = '';\n  selectedItems: { item: string, processing: string, time: string, resources: string, output: string }[] = [];\n  onItemSelect() {\n    if (this.selectedItem) {\n      this.selectedProcess = '';\n      this.processings = []\n      recipes[\"items\"].forEach(item => {\n        if (item['name'] === this.selectedItem.toLowerCase()) {\n          this.possibleProcesses = item['processes'];\n          item['processes'].forEach(e => {\n            this.processings.push(this.util.capitalizeFirstLetter(e['name'].toLowerCase()))\n          });\n        }\n      });\n      this.processings.sort();\n    }\n    else {\n      this.selectedProcess = '';\n    }\n\n  }\n  onSubmit() {\n    this.possibleProcesses.forEach((element: any) => {\n      if (this.selectedProcess.toLowerCase() === element['name']) {\n        this.timeToMake = element['time'];\n        console.log(element['input'])\n        for (let mat in element['input']) {\n          this.resourcesPerItem += this.util.capitalizeFirstLetter(mat) + ':\\t ' + element['input'][mat] + '\\t\\n'\n          // console.log(mat);\n          // console.log(element['input'][mat])\n        }\n        for (let mat in element['output']) {\n          this.outputPerItem += this.util.capitalizeFirstLetter(mat) + ':\\t ' + element['output'][mat] + '\\t\\n'\n        }\n        // element['input'].forEach((inputs: any) => {\n        //   console.log(inputs)\n        // });\n      }\n    });\n\n    const newItem = {\n      item: this.selectedItem, processing: this.selectedProcess,\n      time: this.timeToMake, resources: this.resourcesPerItem, output: this.outputPerItem\n    };\n    this.selectedItems.push(newItem);\n    this.selectedItem = '';\n    this.selectedProcess = '';\n  }\n  calculateTotal() {\n    console.log()\n  }\n\n  removeItem(index: number) {\n    this.selectedItems.splice(index, 1);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}